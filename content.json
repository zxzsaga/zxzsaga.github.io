{"pages":[{"title":"About","text":"90后程序员，热爱游戏与足球。 没有当上足球运动员，但成为了游戏开发者。","link":"/about/index.html"}],"posts":[{"title":"简单实用的2D水面效果","text":"之前做一个2D项目的时候，跟美术学了一个2D水面效果的制作方法，实现简单而且效果非常好。我觉得不记录下来挺可惜的。 我录了十几秒的视频: 本来是我传的gif的，但gif效果不好，而且网易云相册外链把gif变成jpg了，所以只好传个视频了。 做这样一个效果只需要两张png（当然其他部分的背景不算了）: 项目是用 cocos 做的，用到了它的剪裁节点(clipping node). 将水面图片作为原图，剪裁图片作为 stencil, 生成一个剪裁节点(相当把原图中被剪裁图片覆盖的区域剪裁掉，变为透明)。再把水面图片作为底图，上面覆盖一层剪裁节点，并让剪裁节点的纵坐标比底图大1个像素，这样。也就是说水面图片实际上被使用了两次，一次是作为原图生成剪裁节点，另一次是作为底图静态放置在场景中。然后给 剪裁节点的 stencial 加上一个循环的向上移动的动画。最后调整一下动画的起始位置和最终位置，让他们连接起来，调整一下速度，就行了。 上面的描述可能有些不清晰，我们可以这样想：有两张水面的图片重叠在一起，并错开一个像素，而上面那张水面图片的部分区域会被剪裁掉，这部分就会显示下面那张图片的区域。剪裁是波浪状的，并平滑移动。而且由于两张水面图片只相差1个像素，所以对底图某个位置的像素，其上方即使被遮盖，也只会是被离它1个像素位置的点遮盖，所以最终的效果会非常平滑。 这么简洁的方法就能实现这样不错的效果，老司机的技法就是高超。","link":"/2015/09/18/简单实用的2D水面效果/"},{"title":"生日礼物：《只狼：影逝二度》","text":"今天是我28岁的生日，也是《只狼：影逝二度》的发售日。","link":"/2019/03/22/Sekiro-Release/"}],"tags":[],"categories":[{"name":"Game Develop","slug":"Game-Develop","link":"/categories/Game-Develop/"}]}